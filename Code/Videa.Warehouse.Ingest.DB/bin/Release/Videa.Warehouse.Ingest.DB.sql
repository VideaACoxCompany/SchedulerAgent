/*
Deployment script for Videa.Warehouse.Ingest.DB

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "Videa.Warehouse.Ingest.DB"
:setvar DefaultFilePrefix "Videa.Warehouse.Ingest.DB"
:setvar DefaultDataPath "C:\Users\jchu1\AppData\Local\Microsoft\VisualStudio\SSDT\Videa.Warehouse.Ingest"
:setvar DefaultLogPath "C:\Users\jchu1\AppData\Local\Microsoft\VisualStudio\SSDT\Videa.Warehouse.Ingest"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
PRINT 'Start of post-deployment scripts'

PRINT 'Begin Seeding wis Tables'

PRINT 'Start seeding wis.BatchProcessingStatus'
MERGE [wis].[BatchProcessingStatus] t
using (
	values('Retrieving'), 
	('Retrieved'), 
	('Validating'), 
	('Validated'), 
	('Prestaging'), 
	('Prestaged'), 
	('Staging'), 
	('Staged'), 
	('Vaulting'), 
	('Vaulted'), 
	('Purging'), 	
	('Purged'),
	('Error')
) as tempt([StatusName])
	on (t.StatusName = tempt.StatusName)
when not matched by target
	then insert ([StatusName]) values(tempt.[StatusName]);
PRINT 'End seeding wis.BatchProcessingStatus'
GO
GO
Print 'End of Seeding.wis.BatchProcessingStatus.sql'

PRINT 'Start seeding wis.BatchProcessingType'
MERGE [wis].[BatchProcessingType] t
using (
	values('Traffic'), ('Platform')
) as tempt([Name])
	on (t.Name = tempt.Name)
when not matched by target
	then insert ([Name]) values(tempt.[Name]);
PRINT 'End seeding wis.BatchProcessingType'
GO
GO
Print 'End of Seeding.wis.BatchProcessingType.sql'

PRINT 'Start seeding wis.BatchStatisticType'
MERGE [wis].[BatchStatisticType] t
using (
	values('RowCount')
) as tempt([Name])
	on (t.Name = tempt.Name)
when not matched by target
	then insert ([Name]) values(tempt.[Name]);
PRINT 'End seeding wis.BatchStatisticType'
GO
GO
Print 'End of Seeding.wis.BatchStatisticType.sql'

PRINT 'End Seeding wis Tables'

PRINT 'End of post-deployment scripts'
GO

GO
PRINT N'Update complete.';


GO
